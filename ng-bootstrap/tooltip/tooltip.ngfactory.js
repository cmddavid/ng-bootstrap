"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NgbTooltipWindowNgFactory = exports.RenderType_NgbTooltipWindow = undefined;
exports.View_NgbTooltipWindow_0 = View_NgbTooltipWindow_0;
exports.View_NgbTooltipWindow_Host_0 = View_NgbTooltipWindow_Host_0;

var _core = require("@angular/core");

var i0 = _interopRequireWildcard(_core);

var _tooltip = require("./tooltip");

var i1 = _interopRequireWildcard(_tooltip);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

/**
* @fileoverview This file is generated by the Angular template compiler.
* Do not edit.
* @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride}
* tslint:disable
*/
var styles_NgbTooltipWindow = [".bs-tooltip-top[_nghost-%COMP%]   .arrow[_ngcontent-%COMP%], .bs-tooltip-bottom[_nghost-%COMP%]   .arrow[_ngcontent-%COMP%] {\n      left: calc(50% - 0.4rem);\n    }\n\n    .bs-tooltip-top-left[_nghost-%COMP%]   .arrow[_ngcontent-%COMP%], .bs-tooltip-bottom-left[_nghost-%COMP%]   .arrow[_ngcontent-%COMP%] {\n      left: 1em;\n    }\n\n    .bs-tooltip-top-right[_nghost-%COMP%]   .arrow[_ngcontent-%COMP%], .bs-tooltip-bottom-right[_nghost-%COMP%]   .arrow[_ngcontent-%COMP%] {\n      left: auto;\n      right: 0.8rem;\n    }\n\n    .bs-tooltip-left[_nghost-%COMP%]   .arrow[_ngcontent-%COMP%], .bs-tooltip-right[_nghost-%COMP%]   .arrow[_ngcontent-%COMP%] {\n      top: calc(50% - 0.4rem);\n    }\n    \n    .bs-tooltip-left-top[_nghost-%COMP%]   .arrow[_ngcontent-%COMP%], .bs-tooltip-right-top[_nghost-%COMP%]   .arrow[_ngcontent-%COMP%] {\n      top: 0.4rem;\n    }\n\n    .bs-tooltip-left-bottom[_nghost-%COMP%]   .arrow[_ngcontent-%COMP%], .bs-tooltip-right-bottom[_nghost-%COMP%]   .arrow[_ngcontent-%COMP%] {\n      top: auto;\n      bottom: 0.4rem;\n    }"];
var RenderType_NgbTooltipWindow = i0.ɵcrt({ encapsulation: 0, styles: styles_NgbTooltipWindow, data: {} });
exports.RenderType_NgbTooltipWindow = RenderType_NgbTooltipWindow;
function View_NgbTooltipWindow_0(_l) {
  return i0.ɵvid(2, [(_l()(), i0.ɵeld(0, 0, null, null, 0, "div", [["class", "arrow"]], null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 1, "div", [["class", "tooltip-inner"]], null, null, null, null, null)), i0.ɵncd(null, 0)], null, null);
}
function View_NgbTooltipWindow_Host_0(_l) {
  return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, "ngb-tooltip-window", [["role", "tooltip"]], [[8, "className", 0], [8, "id", 0]], null, null, View_NgbTooltipWindow_0, RenderType_NgbTooltipWindow)), i0.ɵdid(1, 49152, null, 0, i1.NgbTooltipWindow, [i0.ElementRef, i0.Renderer2], null, null)], null, function (_ck, _v) {
    var currVal_0 = "tooltip show bs-tooltip-" + i0.ɵnov(_v, 1).placement.split("-")[0] + " bs-tooltip-" + i0.ɵnov(_v, 1).placement;var currVal_1 = i0.ɵnov(_v, 1).id;_ck(_v, 0, 0, currVal_0, currVal_1);
  });
}
var NgbTooltipWindowNgFactory = i0.ɵccf("ngb-tooltip-window", i1.NgbTooltipWindow, View_NgbTooltipWindow_Host_0, { placement: "placement", id: "id" }, {}, ["*"]);
exports.NgbTooltipWindowNgFactory = NgbTooltipWindowNgFactory;
//# sourceMappingURL=tooltip.ngfactory.js.map